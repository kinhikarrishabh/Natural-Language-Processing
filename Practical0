{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "56d1935d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import re"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "836bd769",
   "metadata": {},
   "source": [
    "# Read all the content present inside the file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b9c8f2fa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello world\n",
      "Hello Python\n",
      "Good morning\n",
      "How are you\n"
     ]
    }
   ],
   "source": [
    "f=open(\"Hello.txt\",'r')\n",
    "print(f.read())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8569650",
   "metadata": {},
   "source": [
    "# Read only the first 5 characters of the file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "907449c5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello\n"
     ]
    }
   ],
   "source": [
    "f=open(\"Hello.txt\",'r')\n",
    "print(f.read(5))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1fbe0d60",
   "metadata": {},
   "source": [
    "\n",
    "# Read the content of the file on a line by line basis.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "216f79eb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello world\n",
      "\n"
     ]
    }
   ],
   "source": [
    "f=open(\"Hello.txt\",'r')\n",
    "print(f.readline())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "155ab290",
   "metadata": {},
   "source": [
    "\n",
    "# Read all the lines present inside the text file including the newline characters.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b4090aca",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello world\n",
      "\n",
      "Hello Python\n",
      "\n",
      "Good morning\n",
      "\n",
      "How are you\n"
     ]
    }
   ],
   "source": [
    "f= open(\"Hello.txt\", \"r\")\n",
    "for x in f:\n",
    "  print(x)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69afd3d2",
   "metadata": {},
   "source": [
    "# Read a specific line from a File"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "6b99faad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Good morning\n",
      "\n"
     ]
    }
   ],
   "source": [
    "f=open(\"Hello.txt\",'r')\n",
    "print(f.readlines()[2])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff919a7d",
   "metadata": {},
   "source": [
    "# Write the String ‘Hello World’ into the ‘test.txt’ file\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "b32b85c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "f=open(\"test.txt\",'w')\n",
    "f.write('Hello World'+'\\n')\n",
    "f.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "6df89e18",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Hello World\\n'"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f=open('test.txt','r')\n",
    "f.read()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7113f1b",
   "metadata": {},
   "source": [
    "# Write  “Hello World” in first line and “Hello Python” in second line\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "5cef38e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "f=open(\"test.txt\",'a')\n",
    "f.write('Hello Python')\n",
    "f.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "bb59e1d3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello World\n",
      "Hello Python\n"
     ]
    }
   ],
   "source": [
    "f=open('test.txt','r')\n",
    "print(f.read())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e1783cbd",
   "metadata": {},
   "source": [
    "# Write list of fruits in .txt file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "db512042",
   "metadata": {},
   "outputs": [],
   "source": [
    "fruits=['mango','apple','banana','grapes']\n",
    "f=open('fruits.txt','w')\n",
    "for i in fruits:\n",
    "    f.write(i+'\\n')\n",
    "    \n",
    "f.close()\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "a61f4767",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mango\n",
      "apple\n",
      "banana\n",
      "grapes\n",
      "\n"
     ]
    }
   ],
   "source": [
    "f=open('fruits.txt','r')\n",
    "print(f.read())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db62c5a4",
   "metadata": {},
   "source": [
    "# Write a program to read resume  and its details"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "afdf5808",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Resume\n",
      "Name: Abc\n",
      "Age: 25yrs\n",
      "Qualification: Masters\n",
      "Degree: Engineering\n"
     ]
    }
   ],
   "source": [
    "f=open('Biodata.txt','r')\n",
    "print(f.read())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2b0c1d72",
   "metadata": {},
   "source": [
    "# Regular Expression"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ea7d5ea",
   "metadata": {},
   "source": [
    "# Search for a sequence that starts with \"he\", followed by two (any) characters, and an \"o\": Txt=”hello world” "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "5145d330",
   "metadata": {},
   "outputs": [],
   "source": [
    "f=open('search_file','w')\n",
    "f.write('hello world')\n",
    "f.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "e661ae2f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'hello world'"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f=open('search_file','r')\n",
    "a=f.read()\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "056ab2a5",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=re.search('^he..o',a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "f3d0a40c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<re.Match object; span=(0, 5), match='hello'>\n"
     ]
    }
   ],
   "source": [
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "a5c6aa77",
   "metadata": {},
   "outputs": [],
   "source": [
    "f.close()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2bf44981",
   "metadata": {},
   "source": [
    "# For txt = \"The rain in Spain\" , search the string to see if it   \n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "8e5e7858",
   "metadata": {},
   "outputs": [],
   "source": [
    "f=open('spain.txt','w')\n",
    "f.write('The rain in Spain')\n",
    "f.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "ccbb8df7",
   "metadata": {},
   "outputs": [],
   "source": [
    "f=open('spain.txt','r')\n",
    "text=f.read()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29e873cd",
   "metadata": {},
   "source": [
    "# starts with \"The\"   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "abc93705",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<re.Match object; span=(0, 3), match='The'>"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "re.search('^The',text)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "11b4fc6c",
   "metadata": {},
   "source": [
    "# ends with \"Spain\" "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "f67f41cd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<re.Match object; span=(12, 17), match='Spain'>"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "re.search('Spain$',text)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "928495dd",
   "metadata": {},
   "source": [
    "\n",
    "# starts with \"The\"  and ends with \"Spain\" "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "8f614820",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<re.Match object; span=(0, 17), match='The rain in Spain'>"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "re.search('^The.*Spain$',text)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e61f6f6",
   "metadata": {},
   "source": [
    "# Find all lower/Upper case characters alphabetically between \"a\" and \"m\": txt = \"The rain in Spain\" "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "3222e748",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['h', 'e', 'a', 'i', 'i', 'a', 'i']"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "re.findall(\"[a-mA-M]\",text)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d6a550f1",
   "metadata": {},
   "source": [
    "# Search for the first white-space character in the string: txt = \"The rain in Spain\" \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "6b0c3e96",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "' '"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "re.findall('\\s',text)[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee49f518",
   "metadata": {},
   "source": [
    "# Replace every white-space character with the number 9 in any given string\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "369f25a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The9rain9in9Spain'"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "re.sub('\\s','9',text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "a92f1921",
   "metadata": {},
   "outputs": [],
   "source": [
    "f.close()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73a35d43",
   "metadata": {},
   "source": [
    "# Check if an email ID is valid or not \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "4058fe50",
   "metadata": {},
   "outputs": [],
   "source": [
    "f=open('email_file.txt','w')\n",
    "f.write('rk2929@gmail.com\\n')\n",
    "f.write('abcdef@yahoo.com\\n')\n",
    "f.write('abcdes@rediffcom\\n')\n",
    "f.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "b492b4d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "f=open('email_file.txt','r')\n",
    "text=f.readlines()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "de39cc30",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Email Id rk2929@gmail.com\n",
      " is valid!\n",
      "\n",
      "Email Id abcdef@yahoo.com\n",
      " is valid!\n",
      "\n",
      "Email Id abcdes@rediffcom\n",
      " is not valid\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for i in text:\n",
    "    \n",
    "    if (re.search('@',i)) and (re.search('\\.com',i)) is not None:\n",
    "        print(\"Email Id \"+i+\" is valid!\\n\")\n",
    "        \n",
    "    else:\n",
    "        print(\"Email Id \"+i+' is not valid\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "fc57fa03",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Email Id rk2929@gmail.com\n",
      " is not valid\n",
      "\n",
      "Email Id abcdef@yahoo.com\n",
      " is not valid\n",
      "\n",
      "Email Id abcdes@rediffcom\n",
      " is not valid\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for i in text:\n",
    "    \n",
    "    if (re.search('@'+'\\.com',i)) is not None:\n",
    "        print(\"Email Id \"+i+\" is valid!\\n\")\n",
    "        \n",
    "    else:\n",
    "        print(\"Email Id \"+i+' is not valid\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5bf0241d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
